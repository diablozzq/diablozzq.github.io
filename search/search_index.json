{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Exploit ops Welcome! This is a site filled with blogs / notes / projects from the author. To be updated....","title":"Exploit ops"},{"location":"#exploit-ops","text":"Welcome! This is a site filled with blogs / notes / projects from the author. To be updated....","title":"Exploit ops"},{"location":"building-blog/","text":"How to build this site This site is built with a combination of github pages and mkdocs-material. Why Markdown? it will outlive virtually any other format its universal - support has made its way into nearly everything its simple which keeps focus on writing less decisions = less cognitive overhead Why MKdocs? simple quick to get started static site - FAST! good features search built in Why Github Pages? compatible with MKDocs + git workflow reliable, no cost trustworthy Prereqs Installation is simple Install python Run pip install mkdocs-material Folder structure Mkdocs requires a mkdocs.yml, a folder with Markdown docs, and a directory to output the site. My current structure is the following: ..\\diablozzq.github.io\\<static site> ..\\Notes\\public\\<markdown docs> ..\\Notes\\mkdocs.yml The Notes directory is where I store all my notes. This folder is a private github repository. The public subfolder contains blog posts. This structure allows me to quickly convert notes -> blogs. The diablozzq.github.io directory is where the output of mkdocs build goes. Its a github repository, which when commits are pushed, updated the blog on the Github pages. Note: append ?version=asf123 to your site when checking the blog after the build. This forces a cache refresh of the CDN hosting the files. See Updating github pages stackoverflow Setting up mkdocs.yml Here is an example of this sites mkdocs.yml file Most of the config is rather obvious. Look up the documentation for more specifics. site_name: NetSecOps.dev site_author: Kasey Morland site_description: A site about various tech topics copyright: site_url: https://diablozzq.github.io/ repo_url: https://github.com/diablozzq/diablozzq.github.io theme: name: material features: - search.suggest - search.highlight - search.share plugins: - search docs_dir: public site_dir: ../diablozzq.github.io Building the site mkdocs build or python3 -m mkdocs build cd ..\\<page name> git add * git commit -a -m \"<commit message>\" git push Or as I use in a terminal one liner: cd ~/OneDrive/Notes && python3 -m mkdocs build && cd ~/OneDrive/diablozzq.github.io && git add * && git commit -a -m \"blog update\" && git push","title":"How to build this site"},{"location":"building-blog/#how-to-build-this-site","text":"This site is built with a combination of github pages and mkdocs-material.","title":"How to build this site"},{"location":"building-blog/#why-markdown","text":"it will outlive virtually any other format its universal - support has made its way into nearly everything its simple which keeps focus on writing less decisions = less cognitive overhead","title":"Why Markdown?"},{"location":"building-blog/#why-mkdocs","text":"simple quick to get started static site - FAST! good features search built in","title":"Why MKdocs?"},{"location":"building-blog/#why-github-pages","text":"compatible with MKDocs + git workflow reliable, no cost trustworthy","title":"Why Github Pages?"},{"location":"building-blog/#prereqs","text":"Installation is simple Install python Run pip install mkdocs-material","title":"Prereqs"},{"location":"building-blog/#folder-structure","text":"Mkdocs requires a mkdocs.yml, a folder with Markdown docs, and a directory to output the site. My current structure is the following: ..\\diablozzq.github.io\\<static site> ..\\Notes\\public\\<markdown docs> ..\\Notes\\mkdocs.yml The Notes directory is where I store all my notes. This folder is a private github repository. The public subfolder contains blog posts. This structure allows me to quickly convert notes -> blogs. The diablozzq.github.io directory is where the output of mkdocs build goes. Its a github repository, which when commits are pushed, updated the blog on the Github pages. Note: append ?version=asf123 to your site when checking the blog after the build. This forces a cache refresh of the CDN hosting the files. See Updating github pages stackoverflow","title":"Folder structure"},{"location":"building-blog/#setting-up-mkdocsyml","text":"Here is an example of this sites mkdocs.yml file Most of the config is rather obvious. Look up the documentation for more specifics. site_name: NetSecOps.dev site_author: Kasey Morland site_description: A site about various tech topics copyright: site_url: https://diablozzq.github.io/ repo_url: https://github.com/diablozzq/diablozzq.github.io theme: name: material features: - search.suggest - search.highlight - search.share plugins: - search docs_dir: public site_dir: ../diablozzq.github.io","title":"Setting up mkdocs.yml"},{"location":"building-blog/#building-the-site","text":"mkdocs build or python3 -m mkdocs build cd ..\\<page name> git add * git commit -a -m \"<commit message>\" git push Or as I use in a terminal one liner: cd ~/OneDrive/Notes && python3 -m mkdocs build && cd ~/OneDrive/diablozzq.github.io && git add * && git commit -a -m \"blog update\" && git push","title":"Building the site"}]}